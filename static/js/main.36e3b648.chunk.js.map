{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","state","isHidden","listItems","props","goods","sortBy","isReversed","maxItemLength","showList","setState","prevState","reverseList","setSort","field","filterByLength","event","value","target","Number","reset","getList","listCopy","filter","item","length","sort","x","y","localeCompare","reverse","this","listToRender","selectOptions","Array","from","_","className","map","type","onClick","form","onChange","React","Component","goodsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"gRAeaA,EAAb,4MACEC,MAAe,CACbC,UAAU,EACVC,UAAU,YAAK,EAAKC,MAAMC,OAC1BC,OAAQ,KACRC,YAAY,EACZC,cAAe,GANnB,EASEC,SAAW,WACT,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAAET,UAAWS,EAAUT,cAVzD,EAaEU,YAAc,WACZ,EAAKF,UAAS,SAACC,GAAD,MAAgB,CAAEJ,YAAaI,EAAUJ,gBAd3D,EAiBEM,QAAU,SAACC,GACT,EAAKJ,SAAS,CAAEJ,OAAQQ,KAlB5B,EAqBEC,eAAiB,SAACC,GAChB,IAAQC,EAAUD,EAAME,OAAhBD,MAER,EAAKP,SAAS,CAAEF,cAAeW,OAAOF,MAxB1C,EA2BEG,MAAQ,WACN,EAAKV,SAAS,CACZJ,OAAQ,KACRC,YAAY,EACZC,cAAe,KA/BrB,EAmCEa,QAAU,WACR,MAKI,EAAKpB,MAJPK,EADF,EACEA,OACAH,EAFF,EAEEA,UACAI,EAHF,EAGEA,WACAC,EAJF,EAIEA,cAEIc,EAAW,YAAInB,GAAWoB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUjB,KAE9D,GAAIF,EACF,OAAQA,GACN,IAAK,SACHgB,EAASI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,OAASG,EAAEH,UACrC,MAEF,QACEH,EAASI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAQ9C,OAJIrB,GACFe,EAASQ,UAGJR,GA3DX,4CA8DE,WAAU,IAAD,OACP,EAAoCS,KAAK9B,MAAjCC,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,cACZwB,EAAeD,KAAKV,UACpBY,EAAgBC,MAAMC,KAAK,CAAEV,OAAQ,KAAM,SAACW,EAAGT,GAAJ,OAAUA,EAAI,KAE/D,OACE,0BAASU,UAAU,YAAnB,UACGnC,GACC,qCACE,oBAAImC,UAAU,mBAAd,mBAIA,sBAAKA,UAAU,0BAAf,UACE,oBAAIA,UAAU,kBAAd,SACGL,EAAaM,KAAI,SAAAd,GAAI,OACpB,oBAAea,UAAU,uBAAzB,SACGb,GADMA,QAMb,sBAAKa,UAAU,qBAAf,UACE,wBACEE,KAAK,SACLF,UAAU,iBACVG,QAAS,kBAAM,EAAK3B,QAAQ,QAH9B,iCAQA,wBACE0B,KAAK,SACLF,UAAU,iBACVG,QAAS,kBAAM,EAAK3B,QAAQ,WAH9B,4BAQA,wBACE0B,KAAK,SACLF,UAAU,iBACVG,QAAST,KAAKnB,YAHhB,qBAQA,wBACE2B,KAAK,SACLF,UAAU,iBACVG,QAAST,KAAKX,MAHhB,mBAOA,wBACEiB,UAAU,iBACVpB,MAAOT,EACPiC,KAAK,eACLC,SAAU,SAAC1B,GAAD,OAAW,EAAKD,eAAeC,IAJ3C,SAMGiB,EAAcK,KAAI,SAAAd,GAAI,OACrB,wBAEEP,MAAOO,EAFT,oCAIuBA,IAHhBA,iBAYlBtB,GACC,wBACEqC,KAAK,SACLF,UAAU,iBACVG,QAAST,KAAKtB,SAHhB,0BAzIV,GAA+BkC,IAAMC,WCX/BC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,kBAC3B,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,CAAWhC,MAAOwC,OChBtBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.36e3b648.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ninterface State {\n  isHidden: boolean;\n  listItems: string[];\n  sortBy: SortBy;\n  isReversed: boolean;\n  maxItemLength: number;\n}\n\ntype Props = {\n  goods: string[];\n};\n\nexport class GoodsList extends React.Component<Props, State> {\n  state: State = {\n    isHidden: true,\n    listItems: [...this.props.goods],\n    sortBy: null,\n    isReversed: false,\n    maxItemLength: 1,\n  };\n\n  showList = () => {\n    this.setState((prevState) => ({ isHidden: !prevState.isHidden }));\n  };\n\n  reverseList = () => {\n    this.setState((prevState) => ({ isReversed: !prevState.isReversed }));\n  };\n\n  setSort = (field: SortBy) => {\n    this.setState({ sortBy: field });\n  };\n\n  filterByLength = (event: React.SyntheticEvent) => {\n    const { value } = event.target as HTMLSelectElement;\n\n    this.setState({ maxItemLength: Number(value) });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: null,\n      isReversed: false,\n      maxItemLength: 1,\n    });\n  };\n\n  getList = () => {\n    const {\n      sortBy,\n      listItems,\n      isReversed,\n      maxItemLength,\n    } = this.state;\n    const listCopy = [...listItems].filter(item => item.length >= maxItemLength);\n\n    if (sortBy) {\n      switch (sortBy) {\n        case 'length':\n          listCopy.sort((x, y) => x.length - y.length);\n          break;\n\n        default:\n          listCopy.sort((x, y) => x.localeCompare(y));\n      }\n    }\n\n    if (isReversed) {\n      listCopy.reverse();\n    }\n\n    return listCopy;\n  };\n\n  render() {\n    const { isHidden, maxItemLength } = this.state;\n    const listToRender = this.getList();\n    const selectOptions = Array.from({ length: 10 }, (_, x) => x + 1);\n\n    return (\n      <article className=\"GoodsList\">\n        {isHidden || (\n          <>\n            <h1 className=\"GoodsList__title\">\n              Goods\n            </h1>\n\n            <div className=\"GoodsList__main-content\">\n              <ul className=\"GoodsList__list\">\n                {listToRender.map(item => (\n                  <li key={item} className=\"GoodsList__list-item\">\n                    {item}\n                  </li>\n                ))}\n              </ul>\n\n              <div className=\"GoodsList__buttons\">\n                <button\n                  type=\"button\"\n                  className=\"GoodsList__btn\"\n                  onClick={() => this.setSort('abc')}\n                >\n                  Sort alphabetically\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"GoodsList__btn\"\n                  onClick={() => this.setSort('length')}\n                >\n                  Sort by length\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"GoodsList__btn\"\n                  onClick={this.reverseList}\n                >\n                  Reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"GoodsList__btn\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n                <select\n                  className=\"GoodsList__btn\"\n                  value={maxItemLength}\n                  form=\"selectLength\"\n                  onChange={(event) => this.filterByLength(event)}\n                >\n                  {selectOptions.map(item => (\n                    <option\n                      key={item}\n                      value={item}\n                    >\n                      {`Min word length: ${item}`}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </>\n        )}\n\n        {isHidden && (\n          <button\n            type=\"button\"\n            className=\"GoodsList__btn\"\n            onClick={this.showList}\n          >\n            Start\n          </button>\n        )}\n      </article>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <GoodsList goods={goodsFromServer} />\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}